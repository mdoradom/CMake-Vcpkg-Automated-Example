name: CMake with Vcpkg on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install-dependencies:
    name: Install Dependencies with Vcpkg
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies with Vcpkg
      uses: lukka/run-vcpkg@v11.5

  build:
    runs-on: ${{ matrix.os }}

    needs: install-dependencies

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        build_type: [Release]

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install Ninja
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get install -y ninja-build
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          choco install ninja
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          brew install ninja
        fi

    - name: Configure CMake
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          cmake -B ${{ steps.strings.outputs.build-output-dir }} --preset Linux-Release
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake -B ${{ steps.strings.outputs.build-output-dir }} --preset Windows-Release
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          cmake -B ${{ steps.strings.outputs.build-output-dir }} --preset macOS-Release
        fi

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }}
