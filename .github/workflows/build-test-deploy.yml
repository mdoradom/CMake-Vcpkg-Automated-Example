name: CMake with Vcpkg on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install-dependencies:
    name: Install Dependencies with Vcpkg
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies with Vcpkg
      id: vcpkg
      uses: lukka/run-vcpkg@v11.5

    - name: Set output variables
      id: vars
      run: |
        echo "::set-output name=vcpkg_root::$RUNVCPKG_VCPKG_ROOT"

  build:
    runs-on: ${{ matrix.os }}

    needs: install-dependencies

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        build_type: [Release]

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Print environment variables
      run: |
        echo "RUNVCPKG_VCPKG_ROOT: $RUNVCPKG_VCPKG_ROOT"
        echo "VCPKG_ROOT: $VCPKG_ROOT"
    
    - name: Configure CMake
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          cmake -B ${{ steps.strings.outputs.build-output-dir }} --preset Linux-Release -DCMAKE_TOOLCHAIN_FILE=${{ needs.install-dependencies.outputs.vcpkg_root }}/scripts/buildsystems/vcpkg.cmake
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake -B ${{ steps.strings.outputs.build-output-dir }} --preset Windows-Release -DCMAKE_TOOLCHAIN_FILE=${{ needs.install-dependencies.outputs.vcpkg_root }}/scripts/buildsystems/vcpkg.cmake
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          cmake -B ${{ steps.strings.outputs.build-output-dir }} --preset macOS-Release -DCMAKE_TOOLCHAIN_FILE=${{ needs.install-dependencies.outputs.vcpkg_root }}/scripts/buildsystems/vcpkg.cmake
        fi

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }}